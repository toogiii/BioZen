# -*- coding: utf-8 -*-
"""GANMk1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sS_XBqNq4Ck9JBnUIIyIjQ-ERj-Prb3U
"""

!pip install mxnet
!pip install pycomposer
!pip install mxnet-cu101

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
# %config InlineBackend.figure_format = "retina"
plt.style.use("fivethirtyeight")

from pycomposer.gancomposable._mxnet.conditional_gan_composer import ConditionalGANComposer

from logging import getLogger, StreamHandler, NullHandler, DEBUG, ERROR
logger = getLogger("accelbrainbase")
handler = StreamHandler()
handler.setLevel(DEBUG)
logger.setLevel(DEBUG)
logger.addHandler(handler)

gan_composer = ConditionalGANComposer(
    midi_path_list = [
        r'Michael_Jackson_-_Smooth_Criminal.mid', 
        r'AUD_MB1651.mid'
    ],
    batch_size = 20,
    seq_len = 8,
    learning_rate = 1e-10,
    time_fraction = 0.5
)

gan_composer.learn(
    iter_n = 50,
    k_step = 10
)

generative_loss_arr, discriminative_loss_arr, posterior_logs_arr, feature_matching_loss_arr  = gan_composer.extract_logs()

plt.figure(figsize=(20, 10))

plt.plot(posterior_logs_arr)
plt.title("Logs of posteriors")
plt.xlabel("Epochs")
plt.ylabel("Loss")
plt.show()

gan_composer.compose(
    file_path = r'path\to\new\midi\file.mid',
    velocity_mean = None,
    velocity_std = None
)

gan_composer.generative_model.model.save_parameters(filename="demo_midinet.params")